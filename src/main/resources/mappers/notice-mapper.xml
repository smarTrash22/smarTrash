<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="noticeMapper">

<resultMap type="Notice" id="resultNotice">
		<id column="notice_no" property="notice_no" />
		<result column="notice_title" property="notice_title" />
		<result column="notice_date" property="notice_date" />
		<result column="notice_writer" property="notice_writer" />
		<result column="notice_content" property="notice_content" />
		<result column="notice_original_filepath" property="notice_original_filepath" />
		<result column="notice_rename_filepath" property="notice_rename_filepath" />
		<result column="notice_readcount" property="notice_readcount" />
	</resultMap>
	
	<select id="getListCount" resultType="_int">
		select count(*) from t_notice
	</select>	
	
	<select id="selectList" parameterType="Paging" resultMap="resultNotice">
	<![CDATA[
			select * from (
    		select rownum num, n.* from (
        	select * from t_notice order by notice_no desc ) n )
			where num >= ${startRow} and num <= ${endRow}
	]]>
	</select>
	
	<insert id="insertNotice" parameterType="Notice">
	insert into t_notice values 
		(t_nn_s.nextval, #{ notice_title }, #{ notice_writer }, #{notice_content}, 
		#{ notice_original_filepath, jdbcType=VARCHAR },
		#{ notice_rename_filepath, jdbcType=VARCHAR }, default, default)
	</insert>
	
	<update id="addReadCount" parameterType="_int">
		update t_notice 
		set notice_readcount = notice_readcount + 1 
		where notice_no = #{notice_no}
	</update>

	<select id="selectNotice" parameterType="_int" resultMap="resultNotice">
		select * from t_notice 
		where notice_no = #{notice_no}
	</select>
	
	<delete id="deleteNotice" parameterType="_int">
		delete from t_notice 
			where notice_no = #{notice_no}	
	</delete>
	
	<update id="updateNotice" parameterType="Notice">
		update t_notice 
		set notice_title = #{notice_title}, 
			notice_content = #{notice_content}
			<if test="notice_original_filepath != null">
			, 
			notice_original_filepath = #{notice_original_filepath}, 
			notice_rename_filepath = #{notice_rename_filepath} 
			</if>
			<if test="notice_original_filepath == null">
			, 
			notice_original_filepath = null, 
			notice_rename_filepath = null 
			</if>
		where notice_no = #{notice_no}
	</update>
	
<!-- 	<select id="searchNotice" parameterType="HashMap" resultType="Notice">
		<if test='type.equals("title")'>
		select * from t_notice
		where notice_title like '%' || #{keyword} || '%'
		</if>
		<if test='type.equals("writer")'>
		select * from t_notice
		where notice_writer like '%' || #{keyword} || '%'
		</if>
		<if test='type.equals("titleOrWriter")'>
		select * from t_notice
		where notice_writer like '%' || #{keyword} || '%'
        or notice_content  like '%' || #{keyword} || '%'
        </if>

	</select> -->
	
		<select id="searchNotice" parameterType="HashMap" resultType="Notice">
		<if test='type.equals("title")'>
		<![CDATA[
		select * from (
		select rownum num, n.* from (
		select * from (select * from t_notice
		where notice_title like '%' || #{keyword} || '%') order by notice_no desc ) n)
		where num >= ${startRow} and num <= ${endRow}
		]]>
		</if>
		
		<if test='type.equals("writer")'>
		<![CDATA[
		select * from (
		select rownum num, n.* from (
		select * from (select * from t_notice
		where notice_writer like '%' || #{keyword} || '%') order by notice_no desc ) n)
		where num >= ${startRow} and num <= ${endRow}
		]]>
		</if>
		
		<if test='type.equals("titleOrWriter")'>
		<![CDATA[
		select * from (
		select rownum num, n.* from (
		select * from (select * from t_notice
		where notice_writer like '%' || #{keyword} || '%'
        or notice_content  like '%' || #{keyword} || '%') order by notice_no desc ) n)
		where num >= ${startRow} and num <= ${endRow}
		]]>
        </if>

	</select>
	
</mapper>
